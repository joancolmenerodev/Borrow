apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion AndroidConfig.COMPILE_SDK_VERSION
    buildToolsVersion AndroidConfig.BUILD_TOOLS_VERSION
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    defaultConfig {
        minSdkVersion AndroidConfig.MIN_SDK_VERSION
        targetSdkVersion AndroidConfig.TARGET_SDK_VERSION
        versionCode AndroidConfig.VERSION_CODE
        versionName AndroidConfig.VERSION_NAME
        testInstrumentationRunner AndroidConfig.TEST_INSTRUMENTATION_RUNNER
    }
    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }

        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    android {
        viewBinding {
            enabled = true
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api(AndroidDependencies.SUPPORT_CONSTRAINT_LAYOUT)
    api(AndroidDependencies.COORDINATOR_LAYOUT)
    api(AndroidDependencies.RECYCLERVIEW)
    api(AndroidDependencies.MATERIAL)
    api(AndroidDependencies.DESIGN)
    api AndroidDependencies.LIFECYCLE_RUNTIME
    api AndroidDependencies.LIFECYCLE_COMMON_JAVA8
    api AndroidDependencies.LIFECYCLE_LIVEDATA_KTX
    api AndroidDependencies.LIFECYCLE_VIEWMODEL_KTX

    api LibrariesDependencies.COROUTINES
    api LibrariesDependencies.DAGGER
    api LibrariesDependencies.DAGGER_ANDROID
    api LibrariesDependencies.GLIDE
    api LibrariesDependencies.LOTTIE

    api TestLibraryDependencies.kotlinxCoroutinestest
    api TestLibraryDependencies.jUnit
    api TestLibraryDependencies.mockK
    api TestLibraryDependencies.testRunner
    api TestLibraryDependencies.mockWebServer
    api TestLibraryDependencies.mockitoCore
    api TestLibraryDependencies.mockitoKotlin
    api TestLibraryDependencies.mockitoInline
}